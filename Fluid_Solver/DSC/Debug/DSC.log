Build started 24-02-2016 12:07:10.
     1>Project "D:\Programmering\Fluid_simulation-SPH_and_DSC-\Fluid_Solver\DSC\DSC.vcxproj" on node 2 (Build target(s)).
     1>ClCompile:
         C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\CL.exe /c /ZI /nologo /W3 /WX- /Od /Oy- /D WIN32 /D _DEBUG /D _LIB /D _UNICODE /D UNICODE /Gm /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\DSC.pdb" /Gd /TP /analyze- /errorReport:prompt ..\src\design_domain.cpp ..\src\DSC.cpp ..\src\object_generator.cpp ..\src\trializer.cpp
         trializer.cpp
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(322): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(324): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\trializer.cpp(45): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\trializer.cpp(52): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\trializer.cpp(56): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\trializer.cpp(61): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\trializer.cpp(65): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\trializer.cpp(80): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\trializer.cpp(84): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\trializer.cpp(92): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\trializer.cpp(96): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\trializer.cpp(100): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\trializer.cpp(104): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\trializer.cpp(119): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\trializer.cpp(123): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\trializer.cpp(130): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\trializer.cpp(134): warning C4018: '<': signed/unsigned mismatch
     1>c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1087): warning C4996: 'std::_Transform1': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1070): note: see declaration of 'std::_Transform1'
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(374): note: see reference to function template instantiation '_OutIt std::transform<const T*,T*,std::binder2nd<std::divides<T>>>(_InIt,_InIt,_OutIt,_Fn1)' being compiled
                 with
                 [
                     _OutIt=double *,
                     T=double,
                     _InIt=const double *,
                     _Fn1=std::binder2nd<std::divides<double>>
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(372): note: while compiling class template member function 'const CGLA::Vec2d CGLA::ArithVec<T,V,2>::operator /(T) const'
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(139): note: see reference to function template instantiation 'const CGLA::Vec2d CGLA::ArithVec<T,V,2>::operator /(T) const' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvecfloat.h(20): note: see reference to class template instantiation 'CGLA::ArithVec<T,V,2>' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec2float.h(21): note: see reference to class template instantiation 'CGLA::ArithVecFloat<T,V,2>' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\vec2d.h(24): note: see reference to class template instantiation 'CGLA::ArithVec2Float<double,CGLA::Vec2d>' being compiled
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1070): note: see declaration of 'std::_Transform1'
     1>c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1224): warning C4996: 'std::_Transform2': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1203): note: see declaration of 'std::_Transform2'
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(345): note: see reference to function template instantiation '_OutIt std::transform<const T*,const T*,T*,std::minus<T>>(_InIt1,_InIt1,_InIt2,_OutIt,_Fn2)' being compiled
                 with
                 [
                     _OutIt=double *,
                     T=double,
                     _InIt1=const double *,
                     _InIt2=const double *,
                     _Fn2=std::minus<double>
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(343): note: while compiling class template member function 'const CGLA::Vec2d CGLA::ArithVec<T,V,2>::operator -(const V &) const'
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(68): note: see reference to function template instantiation 'const CGLA::Vec2d CGLA::ArithVec<T,V,2>::operator -(const V &) const' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1203): note: see declaration of 'std::_Transform2'
     1>c:\program files (x86)\microsoft visual studio 14.0\vc\include\numeric(115): warning C4996: 'std::_Inner_product2': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\numeric(92): note: see declaration of 'std::_Inner_product2'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\numeric(144): note: see reference to function template instantiation '_Ty std::inner_product<_InIt1,_InIt2,_Ty,std::plus<void>,std::multiplies<void>>(_InIt1,_InIt1,_InIt2,_Ty,_Fn21,_Fn22)' being compiled
                 with
                 [
                     _Ty=double,
                     _InIt1=const double *,
                     _InIt2=const double *,
                     _Fn21=std::plus<void>,
                     _Fn22=std::multiplies<void>
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(425): note: see reference to function template instantiation '_Ty std::inner_product<const T*,const T*,T>(_InIt1,_InIt1,_InIt2,_Ty)' being compiled
                 with
                 [
                     _Ty=double,
                     T=double,
                     _InIt1=const double *,
                     _InIt2=const double *
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(86): note: see reference to function template instantiation 'T CGLA::dot<T,V,2>(const CGLA::ArithVec<T,V,2> &,const CGLA::ArithVec<T,V,2> &)' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         object_generator.cpp
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(322): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(324): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\object_generator.cpp(70): warning C4018: '<': signed/unsigned mismatch
     1>c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1224): warning C4996: 'std::_Transform2': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1203): note: see declaration of 'std::_Transform2'
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(345): note: see reference to function template instantiation '_OutIt std::transform<const T*,const T*,T*,std::minus<T>>(_InIt1,_InIt1,_InIt2,_OutIt,_Fn2)' being compiled
                 with
                 [
                     _OutIt=double *,
                     T=double,
                     _InIt1=const double *,
                     _InIt2=const double *,
                     _Fn2=std::minus<double>
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(343): note: while compiling class template member function 'const CGLA::Vec3d CGLA::ArithVec<T,V,3>::operator -(const V &) const'
                 with
                 [
                     T=double,
                     V=CGLA::Vec3d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\hmesh\mesh_optimization.h(55): note: see reference to function template instantiation 'const CGLA::Vec3d CGLA::ArithVec<T,V,3>::operator -(const V &) const' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec3d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvecfloat.h(20): note: see reference to class template instantiation 'CGLA::ArithVec<T,V,3>' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec3d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec3float.h(21): note: see reference to class template instantiation 'CGLA::ArithVecFloat<T,V,3>' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec3d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\vec3d.h(27): note: see reference to class template instantiation 'CGLA::ArithVec3Float<double,CGLA::Vec3d>' being compiled
     1>c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1087): warning C4996: 'std::_Transform1': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1070): note: see declaration of 'std::_Transform1'
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(374): note: see reference to function template instantiation '_OutIt std::transform<const T*,T*,std::binder2nd<std::divides<T>>>(_InIt,_InIt,_OutIt,_Fn1)' being compiled
                 with
                 [
                     _OutIt=double *,
                     T=double,
                     _InIt=const double *,
                     _Fn1=std::binder2nd<std::divides<double>>
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(372): note: while compiling class template member function 'const CGLA::Vec2d CGLA::ArithVec<T,V,2>::operator /(T) const'
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(139): note: see reference to function template instantiation 'const CGLA::Vec2d CGLA::ArithVec<T,V,2>::operator /(T) const' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvecfloat.h(20): note: see reference to class template instantiation 'CGLA::ArithVec<T,V,2>' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec2float.h(21): note: see reference to class template instantiation 'CGLA::ArithVecFloat<T,V,2>' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\vec2d.h(24): note: see reference to class template instantiation 'CGLA::ArithVec2Float<double,CGLA::Vec2d>' being compiled
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1070): note: see declaration of 'std::_Transform1'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1203): note: see declaration of 'std::_Transform2'
     1>c:\program files (x86)\microsoft visual studio 14.0\vc\include\numeric(115): warning C4996: 'std::_Inner_product2': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\numeric(92): note: see declaration of 'std::_Inner_product2'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\numeric(144): note: see reference to function template instantiation '_Ty std::inner_product<_InIt1,_InIt2,_Ty,std::plus<void>,std::multiplies<void>>(_InIt1,_InIt1,_InIt2,_Ty,_Fn21,_Fn22)' being compiled
                 with
                 [
                     _Ty=double,
                     _InIt1=const double *,
                     _InIt2=const double *,
                     _Fn21=std::plus<void>,
                     _Fn22=std::multiplies<void>
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(425): note: see reference to function template instantiation '_Ty std::inner_product<const T*,const T*,T>(_InIt1,_InIt1,_InIt2,_Ty)' being compiled
                 with
                 [
                     _Ty=double,
                     T=double,
                     _InIt1=const double *,
                     _InIt2=const double *
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(86): note: see reference to function template instantiation 'T CGLA::dot<T,V,2>(const CGLA::ArithVec<T,V,2> &,const CGLA::ArithVec<T,V,2> &)' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         DSC.cpp
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(322): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(324): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\dsc.cpp(962): warning C4018: '<': signed/unsigned mismatch
     1>c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1224): warning C4996: 'std::_Transform2': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1203): note: see declaration of 'std::_Transform2'
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(345): note: see reference to function template instantiation '_OutIt std::transform<const T*,const T*,T*,std::minus<T>>(_InIt1,_InIt1,_InIt2,_OutIt,_Fn2)' being compiled
                 with
                 [
                     _OutIt=double *,
                     T=double,
                     _InIt1=const double *,
                     _InIt2=const double *,
                     _Fn2=std::minus<double>
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(343): note: while compiling class template member function 'const CGLA::Vec3d CGLA::ArithVec<T,V,3>::operator -(const V &) const'
                 with
                 [
                     T=double,
                     V=CGLA::Vec3d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\hmesh\mesh_optimization.h(55): note: see reference to function template instantiation 'const CGLA::Vec3d CGLA::ArithVec<T,V,3>::operator -(const V &) const' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec3d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvecfloat.h(20): note: see reference to class template instantiation 'CGLA::ArithVec<T,V,3>' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec3d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec3float.h(21): note: see reference to class template instantiation 'CGLA::ArithVecFloat<T,V,3>' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec3d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\vec3d.h(27): note: see reference to class template instantiation 'CGLA::ArithVec3Float<double,CGLA::Vec3d>' being compiled
     1>c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1087): warning C4996: 'std::_Transform1': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1070): note: see declaration of 'std::_Transform1'
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(374): note: see reference to function template instantiation '_OutIt std::transform<const T*,T*,std::binder2nd<std::divides<T>>>(_InIt,_InIt,_OutIt,_Fn1)' being compiled
                 with
                 [
                     _OutIt=double *,
                     T=double,
                     _InIt=const double *,
                     _Fn1=std::binder2nd<std::divides<double>>
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(372): note: while compiling class template member function 'const CGLA::Vec2d CGLA::ArithVec<T,V,2>::operator /(T) const'
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(139): note: see reference to function template instantiation 'const CGLA::Vec2d CGLA::ArithVec<T,V,2>::operator /(T) const' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvecfloat.h(20): note: see reference to class template instantiation 'CGLA::ArithVec<T,V,2>' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec2float.h(21): note: see reference to class template instantiation 'CGLA::ArithVecFloat<T,V,2>' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\vec2d.h(24): note: see reference to class template instantiation 'CGLA::ArithVec2Float<double,CGLA::Vec2d>' being compiled
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1070): note: see declaration of 'std::_Transform1'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1203): note: see declaration of 'std::_Transform2'
     1>c:\program files (x86)\microsoft visual studio 14.0\vc\include\numeric(115): warning C4996: 'std::_Inner_product2': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\numeric(92): note: see declaration of 'std::_Inner_product2'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\numeric(144): note: see reference to function template instantiation '_Ty std::inner_product<_InIt1,_InIt2,_Ty,std::plus<void>,std::multiplies<void>>(_InIt1,_InIt1,_InIt2,_Ty,_Fn21,_Fn22)' being compiled
                 with
                 [
                     _Ty=double,
                     _InIt1=const double *,
                     _InIt2=const double *,
                     _Fn21=std::plus<void>,
                     _Fn22=std::multiplies<void>
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(425): note: see reference to function template instantiation '_Ty std::inner_product<const T*,const T*,T>(_InIt1,_InIt1,_InIt2,_Ty)' being compiled
                 with
                 [
                     _Ty=double,
                     T=double,
                     _InIt1=const double *,
                     _InIt2=const double *
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(86): note: see reference to function template instantiation 'T CGLA::dot<T,V,2>(const CGLA::ArithVec<T,V,2> &,const CGLA::ArithVec<T,V,2> &)' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         design_domain.cpp
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(322): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(324): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\design_domain.cpp(27): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\design_domain.cpp(63): warning C4018: '<': signed/unsigned mismatch
     1>d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\design_domain.cpp(89): warning C4018: '<': signed/unsigned mismatch
     1>c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1087): warning C4996: 'std::_Transform1': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1070): note: see declaration of 'std::_Transform1'
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(374): note: see reference to function template instantiation '_OutIt std::transform<const T*,T*,std::binder2nd<std::divides<T>>>(_InIt,_InIt,_OutIt,_Fn1)' being compiled
                 with
                 [
                     _OutIt=double *,
                     T=double,
                     _InIt=const double *,
                     _Fn1=std::binder2nd<std::divides<double>>
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(372): note: while compiling class template member function 'const CGLA::Vec2d CGLA::ArithVec<T,V,2>::operator /(T) const'
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(139): note: see reference to function template instantiation 'const CGLA::Vec2d CGLA::ArithVec<T,V,2>::operator /(T) const' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvecfloat.h(20): note: see reference to class template instantiation 'CGLA::ArithVec<T,V,2>' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec2float.h(21): note: see reference to class template instantiation 'CGLA::ArithVecFloat<T,V,2>' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\vec2d.h(24): note: see reference to class template instantiation 'CGLA::ArithVec2Float<double,CGLA::Vec2d>' being compiled
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1070): note: see declaration of 'std::_Transform1'
     1>c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1224): warning C4996: 'std::_Transform2': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1203): note: see declaration of 'std::_Transform2'
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(345): note: see reference to function template instantiation '_OutIt std::transform<const T*,const T*,T*,std::minus<T>>(_InIt1,_InIt1,_InIt2,_OutIt,_Fn2)' being compiled
                 with
                 [
                     _OutIt=double *,
                     T=double,
                     _InIt1=const double *,
                     _InIt2=const double *,
                     _Fn2=std::minus<double>
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(343): note: while compiling class template member function 'const CGLA::Vec2d CGLA::ArithVec<T,V,2>::operator -(const V &) const'
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(68): note: see reference to function template instantiation 'const CGLA::Vec2d CGLA::ArithVec<T,V,2>::operator -(const V &) const' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm(1203): note: see declaration of 'std::_Transform2'
     1>c:\program files (x86)\microsoft visual studio 14.0\vc\include\numeric(115): warning C4996: 'std::_Inner_product2': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\numeric(92): note: see declaration of 'std::_Inner_product2'
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\numeric(144): note: see reference to function template instantiation '_Ty std::inner_product<_InIt1,_InIt2,_Ty,std::plus<void>,std::multiplies<void>>(_InIt1,_InIt1,_InIt2,_Ty,_Fn21,_Fn22)' being compiled
                 with
                 [
                     _Ty=double,
                     _InIt1=const double *,
                     _InIt2=const double *,
                     _Fn21=std::plus<void>,
                     _Fn22=std::multiplies<void>
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\gel\cgla\arithvec.h(425): note: see reference to function template instantiation '_Ty std::inner_product<const T*,const T*,T>(_InIt1,_InIt1,_InIt2,_Ty)' being compiled
                 with
                 [
                     _Ty=double,
                     T=double,
                     _InIt1=const double *,
                     _InIt2=const double *
                 ]
         d:\programmering\fluid_simulation-sph_and_dsc-\fluid_solver\src\util.h(86): note: see reference to function template instantiation 'T CGLA::dot<T,V,2>(const CGLA::ArithVec<T,V,2> &,const CGLA::ArithVec<T,V,2> &)' being compiled
                 with
                 [
                     T=double,
                     V=CGLA::Vec2d
                 ]
         Generating Code...
       Lib:
         C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\Lib.exe /OUT:"D:\Programmering\Fluid_simulation-SPH_and_DSC-\Fluid_Solver\Debug\DSC.lib" /NOLOGO Debug\design_domain.obj
         Debug\DSC.obj
         Debug\object_generator.obj
         Debug\trializer.obj
         DSC.vcxproj -> D:\Programmering\Fluid_simulation-SPH_and_DSC-\Fluid_Solver\Debug\DSC.lib
     1>Done Building Project "D:\Programmering\Fluid_simulation-SPH_and_DSC-\Fluid_Solver\DSC\DSC.vcxproj" (Build target(s)).

Build succeeded.

Time Elapsed 00:00:04.35
